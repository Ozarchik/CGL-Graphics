name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y \
          cmake g++ python3-pip \
          libgl1-mesa-dev libx11-dev libxi-dev \
          libxrandr-dev libxinerama-dev libxcursor-dev libxext-dev

    - name: Install Python + Conan (Linux)
      if: runner.os == 'Linux'
      run: |
        pip install conan

    - name: Install Python + Conan (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install conan

    - name: Detect Conan profile
      run: conan profile detect --force

    - name: Install dependencies with Conan
      run: |
        conan install . -of build -b missing \
          -s compiler.cppstd=20 \
          -s build_type=${{ matrix.build_type }}

    - name: Configure CMake
      run: >
        cmake -B build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_CXX_STANDARD=20
        -S .

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Run tests (if any)
      working-directory: build
      run: ctest --build-config ${{ matrix.build_type }} || true
